name: Releases

on: 
  push:
    branches:
    - main
    #tags:
    #- '*'

jobs:

  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3

    # Go environment
    - name: setup Go Lang
      uses: actions/setup-go@v3
      with:
        go-version: '^1.19.2'
    - run: |
        go version
        cd src
        go mod init fabianlee/docker-golang-signal-web
        go mod tidy
        go build -ldflags "-X main.Version=$(VERSION) -X main.BuildTime=$(BUILD_TIME) -X main.BuiltBy=makefile" main.go


    - name: get current semantic version
      id: semantic_version
      run: |
        semantic_version=$(git tag --sort=-committerdate | grep ^v | grep -Po '^v[0-9]*.[0-9]*.[0-9]*' | head -n1)
        echo "semantic_version=$semantic_version" >> $GITHUB_OUTPUT
    - run: echo ${{ steps.semantic_version.outputs.semantic_version }}

    - name: get range of commit messages
      id: newtag
      run: |
        if git tag --sort=committerdate | grep -q ^v ; then

        semantic_version=$(git tag --sort=-committerdate | grep ^v | grep -Po '^v[0-9]*.[0-9]*.[0-9]*' | head -n1)
        major_minor=$(echo "$semantic_version" | cut -d'.' -f1-2)
        patch=$(echo "$semantic_version" | cut -d'.' -f3)
        ((patch++))
        newtag="${major_minor}.${patch}"

        else
        semantic_version=""
        newtag="v1.0.0"
        fi

        echo "# old version: $semantic_version new_version: ${newtag}" | tee body.md
        echo "newtag=$newtag" >> $GITHUB_OUTPUT
    - run: echo ${{ steps.newtag.outputs.newtag }}

    #  release
    - uses: ncipollo/release-action@v1
      with:
        name: ${{ steps.newtag.outputs.newtag }}
        tag: ""
        artifacts: "src/main"
        bodyFile: "body.md"
        token: ${{ secrets.GITHUB_TOKEN }}
