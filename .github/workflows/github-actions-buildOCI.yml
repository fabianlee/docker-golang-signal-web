name: build-oci-image

run-name: Build OCI Image as ${{ github.actor }}

on:
  push:
    branches: ['main']
    #tags: ['v*']
  pull_request:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-oci-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:

      # checkout
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event from ${{ github.actor }}."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v3

      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."

      # debug github context and env
      - name: Dump env
        run: env | sort
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"


      # docker hub credentials
      - name: login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Github container registry credentials
      - name: Log in to the Github Container registry ${{ env.REGISTRY }} as ${{ github.actor }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # tags and labels
      - name: Extract metadata (tags, labels) for image ${{ env.IMAGE_NAME }}
        id: meta
        uses: docker/metadata-action@v4
        with:
          # https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
          # push to both docker hub and Github Container Registry
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            fabianlee/${{ github.repository }}
          #  ${{ github.actor }}/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            # in addition to full semantic version (x.y.z) would also create (x.y)
            #type=semver,pattern={{major}}.{{minor}}

      # Go environment
      - name: setup Go Lang
        uses: actions/setup-go@v3
        with:
          go-version: '^1.19.2'
      - run: go version

      # build OCI image and push to Docker Hub
      - name: build and push docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            MY_VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            MY_BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            MY_BUILTBY=Github Action based on event from ${{ github.actor }}
