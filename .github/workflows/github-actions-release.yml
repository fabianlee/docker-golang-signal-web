name: build-release-binary

run-name: Create Github Release

on: 
  push:
    #branches:
    #- main
    tags:
    - 'r*'

jobs:

  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3

    # Go environment
    - name: setup Go Lang
      uses: actions/setup-go@v3
      with:
        go-version: '^1.19.2'
    - run: |
        go version
        cd src
        go mod init fabianlee/docker-golang-signal-web
        go mod tidy
        go build -ldflags "-X main.Version=$(VERSION) -X main.BuildTime=$(BUILD_TIME) -X main.BuiltBy=makefile" main.go


    - name: get semantic tag version and release notes from commit messages
      id: newtag
      run: |
        if git tag --sort=committerdate | grep -q ^r ; then

          semantic_version=$(git tag --sort=-committerdate | grep ^r | grep -Po '^r[0-9]*.[0-9]*.[0-9]*' | head -n1)
          major_minor=$(echo "$semantic_version" | cut -d'.' -f1-2)
          patch=$(echo "$semantic_version" | cut -d'.' -f3)
          ((patch++))
          newtag="${major_minor}.${patch}"

        else
          semantic_version=""
          newtag="r1.0.0"
        fi

        # get commit messages
        if [ -n "$semantic_version" ]; then
          git log HEAD...${semantic_version} --pretty="- %s " >> body.md
        else
          git log --pretty="- %s " >> body.md
        fi
        cat body.md
        echo "newtag=$newtag" >> $GITHUB_OUTPUT

    - run: echo newtag is ${{ steps.newtag.outputs.newtag }}

    #  create release with release note written to file and binary asset attached
    - uses: ncipollo/release-action@v1
      with:
        name: ${{ steps.newtag.outputs.newtag }}
        tag: ${{ steps.newtag.outputs.newtag }}
        artifacts: "src/main"
        bodyFile: "body.md"
        token: ${{ secrets.GITHUB_TOKEN }}
